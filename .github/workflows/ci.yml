name: CHTL Compiler CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [17, 21]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Cache compiled classes
      uses: actions/cache@v3
      with:
        path: build
        key: ${{ runner.os }}-build-${{ hashFiles('src/**/*.java') }}
        restore-keys: |
          ${{ runner.os }}-build-
    
    - name: Compile source code
      run: |
        mkdir -p build
        find src/main/java -name "*.java" -type f > sources.txt
        javac -d build -cp ".:src/main/java" @sources.txt
    
    - name: Compile tests
      run: |
        if [ -d "src/test/java" ]; then
          find src/test/java -name "*.java" -type f > test-sources.txt
          javac -d build -cp "build:src/test/java" @test-sources.txt
        fi
    
    - name: Run tests
      run: ./scripts/run-tests.sh
    
    - name: Upload test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports-java${{ matrix.java-version }}
        path: test-reports/
    
    - name: Test summary
      if: always()
      run: |
        if [ -d "test-reports" ]; then
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          tail -n 20 test-reports/test-report-*.txt >> $GITHUB_STEP_SUMMARY
        fi

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Check code formatting
      run: |
        echo "Checking code formatting..."
        # 检查Java文件格式
        find src -name "*.java" -type f | while read file; do
          # 检查文件末尾是否有换行
          if [ -n "$(tail -c 1 "$file")" ]; then
            echo "Error: $file does not end with newline"
            exit 1
          fi
          
          # 检查是否有尾随空格
          if grep -q "[[:space:]]$" "$file"; then
            echo "Error: $file has trailing whitespace"
            exit 1
          fi
        done
        echo "Code formatting check passed!"
    
    - name: Check for TODO comments
      run: |
        echo "Checking for TODO comments..."
        TODO_COUNT=$(grep -r "TODO\|FIXME\|XXX" src --include="*.java" | wc -l || true)
        echo "Found $TODO_COUNT TODO/FIXME/XXX comments"
        if [ $TODO_COUNT -gt 0 ]; then
          echo "::warning::Found $TODO_COUNT TODO comments in code"
          grep -r "TODO\|FIXME\|XXX" src --include="*.java" || true
        fi

  performance-test:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Run performance tests
      run: |
        echo "Running performance benchmarks..."
        mkdir -p build
        
        # 编译性能测试
        javac -d build -cp ".:src/main/java" src/main/java/com/chtl/test/PerformanceTest.java
        
        # 运行性能测试
        cd build && java -cp "." com.chtl.test.PerformanceTest > ../performance-report.txt
        
        # 显示结果
        cat ../performance-report.txt
    
    - name: Upload performance report
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: performance-report.txt