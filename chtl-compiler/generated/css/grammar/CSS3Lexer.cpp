
// Generated from grammar/CSS3.g4 by ANTLR 4.13.1


#include "CSS3Lexer.h"


using namespace antlr4;

using namespace chtl;


using namespace antlr4;

namespace {

struct CSS3LexerStaticData final {
  CSS3LexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  CSS3LexerStaticData(const CSS3LexerStaticData&) = delete;
  CSS3LexerStaticData(CSS3LexerStaticData&&) = delete;
  CSS3LexerStaticData& operator=(const CSS3LexerStaticData&) = delete;
  CSS3LexerStaticData& operator=(CSS3LexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag css3lexerLexerOnceFlag;
#if ANTLR4_USE_THREAD_LOCAL_CACHE
static thread_local
#endif
CSS3LexerStaticData *css3lexerLexerStaticData = nullptr;

void css3lexerLexerInitialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  if (css3lexerLexerStaticData != nullptr) {
    return;
  }
#else
  assert(css3lexerLexerStaticData == nullptr);
#endif
  auto staticData = std::make_unique<CSS3LexerStaticData>(
    std::vector<std::string>{
      "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
      "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
      "T__17", "Hex", "NonAscii", "Unicode", "Escape", "Nmstart", "Nmchar", 
      "Url", "Whitespace", "Comment", "CDO", "CDC", "Includes", "DashMatch", 
      "Hash", "Import", "Page", "Media", "Namespace", "CharSet", "Important", 
      "FontFace", "Supports", "Or", "Keyframes", "From", "To", "Calc", "Viewport", 
      "CounterStyle", "FontFeatureValues", "Var", "MediaOnly", "Not", "And", 
      "Dimension", "UnknownDimension", "Percentage", "Number", "Uri", "String_", 
      "Function_", "UnicodeRange", "Ident", "Variable", "Plus", "Minus", 
      "Greater", "Tilde", "PseudoNot", "Space", "Newline", "A", "B", "C", 
      "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", 
      "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "';'", "','", "'('", "':'", "')'", "'{'", "'}'", "'*'", "'|'", 
      "'.'", "'['", "']'", "'='", "'^='", "'$='", "'*='", "'/'", "'@'", 
      "", "'<!--'", "'-->'", "'~='", "'|='", "", "", "", "", "", "'@charset'", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "'+'", "'-'", "'>'", "'~'"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "Comment", "CDO", "CDC", "Includes", "DashMatch", "Hash", 
      "Import", "Page", "Media", "Namespace", "CharSet", "Important", "FontFace", 
      "Supports", "Or", "Keyframes", "From", "To", "Calc", "Viewport", "CounterStyle", 
      "FontFeatureValues", "Var", "MediaOnly", "Not", "And", "Dimension", 
      "UnknownDimension", "Percentage", "Number", "Uri", "String_", "Function_", 
      "UnicodeRange", "Ident", "Variable", "Plus", "Minus", "Greater", "Tilde", 
      "PseudoNot", "Space", "Newline"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,61,861,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
  	6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
  	7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
  	7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
  	7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
  	7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
  	7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
  	7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
  	7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
  	7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
  	7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
  	7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
  	7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
  	7,91,2,92,7,92,2,93,7,93,2,94,7,94,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,
  	4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,
  	1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,
  	1,18,1,18,1,19,1,19,1,20,1,20,1,20,3,20,238,8,20,1,20,3,20,241,8,20,1,
  	20,3,20,244,8,20,1,20,3,20,247,8,20,1,20,3,20,250,8,20,1,20,1,20,1,20,
  	3,20,255,8,20,1,21,1,21,1,21,3,21,260,8,21,1,22,1,22,1,22,3,22,265,8,
  	22,1,23,1,23,1,23,3,23,270,8,23,1,24,1,24,1,24,5,24,275,8,24,10,24,12,
  	24,278,9,24,1,25,1,25,3,25,282,8,25,1,26,1,26,1,26,1,26,5,26,288,8,26,
  	10,26,12,26,291,9,26,1,26,4,26,294,8,26,11,26,12,26,295,1,26,1,26,5,26,
  	300,8,26,10,26,12,26,303,9,26,1,26,4,26,306,8,26,11,26,12,26,307,5,26,
  	310,8,26,10,26,12,26,313,9,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,
  	1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,4,31,
  	336,8,31,11,31,12,31,337,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,
  	1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,
  	1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
  	1,36,1,36,1,36,1,36,1,37,1,37,1,37,5,37,384,8,37,10,37,12,37,387,9,37,
  	1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,
  	1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
  	1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
  	1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
  	1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
  	1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
  	1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,3,41,484,8,41,
  	1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,
  	1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,
  	1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
  	1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,
  	1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,
  	1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
  	1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
  	1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
  	1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,
  	611,8,52,1,53,1,53,1,53,1,54,1,54,1,54,1,55,4,55,620,8,55,11,55,12,55,
  	621,1,55,1,55,4,55,626,8,55,11,55,12,55,627,3,55,630,8,55,1,55,1,55,4,
  	55,634,8,55,11,55,12,55,635,3,55,638,8,55,1,56,1,56,1,56,1,56,1,56,5,
  	56,645,8,56,10,56,12,56,648,9,56,1,56,1,56,3,56,652,8,56,1,56,5,56,655,
  	8,56,10,56,12,56,658,9,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,3,57,667,
  	8,57,5,57,669,8,57,10,57,12,57,672,9,57,1,57,1,57,1,57,1,57,1,57,1,57,
  	3,57,680,8,57,5,57,682,8,57,10,57,12,57,685,9,57,1,57,3,57,688,8,57,1,
  	58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,5,59,698,8,59,10,59,12,59,701,9,
  	59,1,59,1,59,1,59,5,59,706,8,59,10,59,12,59,709,9,59,1,59,1,59,1,59,1,
  	59,5,59,715,8,59,10,59,12,59,718,9,59,1,59,1,59,1,59,1,59,1,59,5,59,725,
  	8,59,10,59,12,59,728,9,59,1,59,1,59,1,59,1,59,1,59,1,59,5,59,736,8,59,
  	10,59,12,59,739,9,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,5,59,748,8,59,
  	10,59,12,59,751,9,59,3,59,753,8,59,1,59,1,59,1,59,1,59,4,59,759,8,59,
  	11,59,12,59,760,1,59,1,59,4,59,765,8,59,11,59,12,59,766,3,59,769,8,59,
  	1,60,1,60,5,60,773,8,60,10,60,12,60,776,9,60,1,61,1,61,1,61,1,61,4,61,
  	782,8,61,11,61,12,61,783,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,
  	1,66,1,66,1,66,1,66,1,66,1,67,4,67,801,8,67,11,67,12,67,802,1,68,1,68,
  	1,68,3,68,808,8,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,
  	1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,
  	1,81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,87,1,87,
  	1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,1,92,1,92,1,93,1,93,1,94,1,94,
  	0,0,95,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
  	27,14,29,15,31,16,33,17,35,18,37,0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,
  	53,19,55,20,57,21,59,22,61,23,63,24,65,25,67,26,69,27,71,28,73,29,75,
  	30,77,31,79,32,81,33,83,34,85,35,87,36,89,37,91,38,93,39,95,40,97,41,
  	99,42,101,43,103,44,105,45,107,46,109,47,111,48,113,49,115,50,117,51,
  	119,52,121,53,123,54,125,55,127,56,129,57,131,58,133,59,135,60,137,61,
  	139,0,141,0,143,0,145,0,147,0,149,0,151,0,153,0,155,0,157,0,159,0,161,
  	0,163,0,165,0,167,0,169,0,171,0,173,0,175,0,177,0,179,0,181,0,183,0,185,
  	0,187,0,189,0,1,0,41,3,0,48,57,65,70,97,102,1,0,0,127,3,0,9,10,12,13,
  	32,32,5,0,10,10,12,13,48,57,65,70,97,102,3,0,65,90,95,95,97,122,5,0,45,
  	45,48,57,65,90,95,95,97,122,3,0,33,33,35,38,42,126,2,0,9,10,12,13,1,0,
  	42,42,2,0,42,42,47,47,1,0,48,57,4,0,10,10,12,13,34,34,92,92,2,0,10,10,
  	12,13,4,0,10,10,12,13,39,39,92,92,2,0,9,9,32,32,2,0,65,65,97,97,2,0,66,
  	66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,70,70,
  	102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,
  	74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,
  	78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,
  	0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,
  	2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,
  	2,0,90,90,122,122,900,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
  	0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
  	1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,
  	0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,
  	0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
  	1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,
  	0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,
  	0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
  	1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
  	1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,
  	1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,
  	1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,1,191,
  	1,0,0,0,3,193,1,0,0,0,5,195,1,0,0,0,7,197,1,0,0,0,9,199,1,0,0,0,11,201,
  	1,0,0,0,13,203,1,0,0,0,15,205,1,0,0,0,17,207,1,0,0,0,19,209,1,0,0,0,21,
  	211,1,0,0,0,23,213,1,0,0,0,25,215,1,0,0,0,27,217,1,0,0,0,29,220,1,0,0,
  	0,31,223,1,0,0,0,33,226,1,0,0,0,35,228,1,0,0,0,37,230,1,0,0,0,39,232,
  	1,0,0,0,41,234,1,0,0,0,43,259,1,0,0,0,45,264,1,0,0,0,47,269,1,0,0,0,49,
  	276,1,0,0,0,51,281,1,0,0,0,53,283,1,0,0,0,55,318,1,0,0,0,57,323,1,0,0,
  	0,59,327,1,0,0,0,61,330,1,0,0,0,63,333,1,0,0,0,65,339,1,0,0,0,67,347,
  	1,0,0,0,69,353,1,0,0,0,71,360,1,0,0,0,73,371,1,0,0,0,75,380,1,0,0,0,77,
  	398,1,0,0,0,79,409,1,0,0,0,81,419,1,0,0,0,83,483,1,0,0,0,85,485,1,0,0,
  	0,87,490,1,0,0,0,89,493,1,0,0,0,91,498,1,0,0,0,93,508,1,0,0,0,95,523,
  	1,0,0,0,97,544,1,0,0,0,99,548,1,0,0,0,101,553,1,0,0,0,103,557,1,0,0,0,
  	105,561,1,0,0,0,107,612,1,0,0,0,109,615,1,0,0,0,111,637,1,0,0,0,113,639,
  	1,0,0,0,115,687,1,0,0,0,117,689,1,0,0,0,119,768,1,0,0,0,121,770,1,0,0,
  	0,123,777,1,0,0,0,125,785,1,0,0,0,127,787,1,0,0,0,129,789,1,0,0,0,131,
  	791,1,0,0,0,133,793,1,0,0,0,135,800,1,0,0,0,137,807,1,0,0,0,139,809,1,
  	0,0,0,141,811,1,0,0,0,143,813,1,0,0,0,145,815,1,0,0,0,147,817,1,0,0,0,
  	149,819,1,0,0,0,151,821,1,0,0,0,153,823,1,0,0,0,155,825,1,0,0,0,157,827,
  	1,0,0,0,159,829,1,0,0,0,161,831,1,0,0,0,163,833,1,0,0,0,165,835,1,0,0,
  	0,167,837,1,0,0,0,169,839,1,0,0,0,171,841,1,0,0,0,173,843,1,0,0,0,175,
  	845,1,0,0,0,177,847,1,0,0,0,179,849,1,0,0,0,181,851,1,0,0,0,183,853,1,
  	0,0,0,185,855,1,0,0,0,187,857,1,0,0,0,189,859,1,0,0,0,191,192,5,59,0,
  	0,192,2,1,0,0,0,193,194,5,44,0,0,194,4,1,0,0,0,195,196,5,40,0,0,196,6,
  	1,0,0,0,197,198,5,58,0,0,198,8,1,0,0,0,199,200,5,41,0,0,200,10,1,0,0,
  	0,201,202,5,123,0,0,202,12,1,0,0,0,203,204,5,125,0,0,204,14,1,0,0,0,205,
  	206,5,42,0,0,206,16,1,0,0,0,207,208,5,124,0,0,208,18,1,0,0,0,209,210,
  	5,46,0,0,210,20,1,0,0,0,211,212,5,91,0,0,212,22,1,0,0,0,213,214,5,93,
  	0,0,214,24,1,0,0,0,215,216,5,61,0,0,216,26,1,0,0,0,217,218,5,94,0,0,218,
  	219,5,61,0,0,219,28,1,0,0,0,220,221,5,36,0,0,221,222,5,61,0,0,222,30,
  	1,0,0,0,223,224,5,42,0,0,224,225,5,61,0,0,225,32,1,0,0,0,226,227,5,47,
  	0,0,227,34,1,0,0,0,228,229,5,64,0,0,229,36,1,0,0,0,230,231,7,0,0,0,231,
  	38,1,0,0,0,232,233,8,1,0,0,233,40,1,0,0,0,234,235,5,92,0,0,235,237,3,
  	37,18,0,236,238,3,37,18,0,237,236,1,0,0,0,237,238,1,0,0,0,238,240,1,0,
  	0,0,239,241,3,37,18,0,240,239,1,0,0,0,240,241,1,0,0,0,241,243,1,0,0,0,
  	242,244,3,37,18,0,243,242,1,0,0,0,243,244,1,0,0,0,244,246,1,0,0,0,245,
  	247,3,37,18,0,246,245,1,0,0,0,246,247,1,0,0,0,247,249,1,0,0,0,248,250,
  	3,37,18,0,249,248,1,0,0,0,249,250,1,0,0,0,250,254,1,0,0,0,251,252,5,13,
  	0,0,252,255,5,10,0,0,253,255,7,2,0,0,254,251,1,0,0,0,254,253,1,0,0,0,
  	254,255,1,0,0,0,255,42,1,0,0,0,256,260,3,41,20,0,257,258,5,92,0,0,258,
  	260,8,3,0,0,259,256,1,0,0,0,259,257,1,0,0,0,260,44,1,0,0,0,261,265,7,
  	4,0,0,262,265,3,39,19,0,263,265,3,43,21,0,264,261,1,0,0,0,264,262,1,0,
  	0,0,264,263,1,0,0,0,265,46,1,0,0,0,266,270,7,5,0,0,267,270,3,39,19,0,
  	268,270,3,43,21,0,269,266,1,0,0,0,269,267,1,0,0,0,269,268,1,0,0,0,270,
  	48,1,0,0,0,271,275,7,6,0,0,272,275,3,39,19,0,273,275,3,43,21,0,274,271,
  	1,0,0,0,274,272,1,0,0,0,274,273,1,0,0,0,275,278,1,0,0,0,276,274,1,0,0,
  	0,276,277,1,0,0,0,277,50,1,0,0,0,278,276,1,0,0,0,279,282,3,135,67,0,280,
  	282,7,7,0,0,281,279,1,0,0,0,281,280,1,0,0,0,282,52,1,0,0,0,283,284,5,
  	47,0,0,284,285,5,42,0,0,285,289,1,0,0,0,286,288,8,8,0,0,287,286,1,0,0,
  	0,288,291,1,0,0,0,289,287,1,0,0,0,289,290,1,0,0,0,290,293,1,0,0,0,291,
  	289,1,0,0,0,292,294,5,42,0,0,293,292,1,0,0,0,294,295,1,0,0,0,295,293,
  	1,0,0,0,295,296,1,0,0,0,296,311,1,0,0,0,297,301,8,9,0,0,298,300,8,8,0,
  	0,299,298,1,0,0,0,300,303,1,0,0,0,301,299,1,0,0,0,301,302,1,0,0,0,302,
  	305,1,0,0,0,303,301,1,0,0,0,304,306,5,42,0,0,305,304,1,0,0,0,306,307,
  	1,0,0,0,307,305,1,0,0,0,307,308,1,0,0,0,308,310,1,0,0,0,309,297,1,0,0,
  	0,310,313,1,0,0,0,311,309,1,0,0,0,311,312,1,0,0,0,312,314,1,0,0,0,313,
  	311,1,0,0,0,314,315,5,47,0,0,315,316,1,0,0,0,316,317,6,26,0,0,317,54,
  	1,0,0,0,318,319,5,60,0,0,319,320,5,33,0,0,320,321,5,45,0,0,321,322,5,
  	45,0,0,322,56,1,0,0,0,323,324,5,45,0,0,324,325,5,45,0,0,325,326,5,62,
  	0,0,326,58,1,0,0,0,327,328,5,126,0,0,328,329,5,61,0,0,329,60,1,0,0,0,
  	330,331,5,124,0,0,331,332,5,61,0,0,332,62,1,0,0,0,333,335,5,35,0,0,334,
  	336,3,47,23,0,335,334,1,0,0,0,336,337,1,0,0,0,337,335,1,0,0,0,337,338,
  	1,0,0,0,338,64,1,0,0,0,339,340,5,64,0,0,340,341,3,155,77,0,341,342,3,
  	163,81,0,342,343,3,169,84,0,343,344,3,167,83,0,344,345,3,173,86,0,345,
  	346,3,177,88,0,346,66,1,0,0,0,347,348,5,64,0,0,348,349,3,169,84,0,349,
  	350,3,139,69,0,350,351,3,151,75,0,351,352,3,147,73,0,352,68,1,0,0,0,353,
  	354,5,64,0,0,354,355,3,163,81,0,355,356,3,147,73,0,356,357,3,145,72,0,
  	357,358,3,155,77,0,358,359,3,139,69,0,359,70,1,0,0,0,360,361,5,64,0,0,
  	361,362,3,165,82,0,362,363,3,139,69,0,363,364,3,163,81,0,364,365,3,147,
  	73,0,365,366,3,175,87,0,366,367,3,169,84,0,367,368,3,139,69,0,368,369,
  	3,143,71,0,369,370,3,147,73,0,370,72,1,0,0,0,371,372,5,64,0,0,372,373,
  	5,99,0,0,373,374,5,104,0,0,374,375,5,97,0,0,375,376,5,114,0,0,376,377,
  	5,115,0,0,377,378,5,101,0,0,378,379,5,116,0,0,379,74,1,0,0,0,380,385,
  	5,33,0,0,381,384,3,135,67,0,382,384,3,53,26,0,383,381,1,0,0,0,383,382,
  	1,0,0,0,384,387,1,0,0,0,385,383,1,0,0,0,385,386,1,0,0,0,386,388,1,0,0,
  	0,387,385,1,0,0,0,388,389,3,155,77,0,389,390,3,163,81,0,390,391,3,169,
  	84,0,391,392,3,167,83,0,392,393,3,173,86,0,393,394,3,177,88,0,394,395,
  	3,139,69,0,395,396,3,165,82,0,396,397,3,177,88,0,397,76,1,0,0,0,398,399,
  	5,64,0,0,399,400,3,149,74,0,400,401,3,167,83,0,401,402,3,165,82,0,402,
  	403,3,177,88,0,403,404,5,45,0,0,404,405,3,149,74,0,405,406,3,139,69,0,
  	406,407,3,143,71,0,407,408,3,147,73,0,408,78,1,0,0,0,409,410,5,64,0,0,
  	410,411,3,175,87,0,411,412,3,179,89,0,412,413,3,169,84,0,413,414,3,169,
  	84,0,414,415,3,167,83,0,415,416,3,173,86,0,416,417,3,177,88,0,417,418,
  	3,175,87,0,418,80,1,0,0,0,419,420,3,167,83,0,420,421,3,173,86,0,421,82,
  	1,0,0,0,422,423,5,64,0,0,423,424,3,159,79,0,424,425,3,147,73,0,425,426,
  	3,187,93,0,426,427,3,149,74,0,427,428,3,173,86,0,428,429,3,139,69,0,429,
  	430,3,163,81,0,430,431,3,147,73,0,431,432,3,175,87,0,432,484,1,0,0,0,
  	433,434,5,64,0,0,434,435,5,45,0,0,435,436,3,183,91,0,436,437,3,147,73,
  	0,437,438,3,141,70,0,438,439,3,159,79,0,439,440,3,155,77,0,440,441,3,
  	177,88,0,441,442,5,45,0,0,442,443,3,159,79,0,443,444,3,147,73,0,444,445,
  	3,187,93,0,445,446,3,149,74,0,446,447,3,173,86,0,447,448,3,139,69,0,448,
  	449,3,163,81,0,449,450,3,147,73,0,450,451,3,175,87,0,451,484,1,0,0,0,
  	452,453,5,64,0,0,453,454,5,45,0,0,454,455,3,163,81,0,455,456,3,167,83,
  	0,456,457,3,189,94,0,457,458,5,45,0,0,458,459,3,159,79,0,459,460,3,147,
  	73,0,460,461,3,187,93,0,461,462,3,149,74,0,462,463,3,173,86,0,463,464,
  	3,139,69,0,464,465,3,163,81,0,465,466,3,147,73,0,466,467,3,175,87,0,467,
  	484,1,0,0,0,468,469,5,64,0,0,469,470,5,45,0,0,470,471,3,163,81,0,471,
  	472,3,175,87,0,472,473,5,45,0,0,473,474,3,159,79,0,474,475,3,147,73,0,
  	475,476,3,187,93,0,476,477,3,149,74,0,477,478,3,173,86,0,478,479,3,139,
  	69,0,479,480,3,163,81,0,480,481,3,147,73,0,481,482,3,175,87,0,482,484,
  	1,0,0,0,483,422,1,0,0,0,483,433,1,0,0,0,483,452,1,0,0,0,483,468,1,0,0,
  	0,484,84,1,0,0,0,485,486,3,149,74,0,486,487,3,173,86,0,487,488,3,167,
  	83,0,488,489,3,163,81,0,489,86,1,0,0,0,490,491,3,177,88,0,491,492,3,167,
  	83,0,492,88,1,0,0,0,493,494,3,143,71,0,494,495,3,139,69,0,495,496,3,161,
  	80,0,496,497,3,143,71,0,497,90,1,0,0,0,498,499,5,64,0,0,499,500,3,181,
  	90,0,500,501,3,155,77,0,501,502,3,147,73,0,502,503,3,183,91,0,503,504,
  	3,169,84,0,504,505,3,167,83,0,505,506,3,173,86,0,506,507,3,177,88,0,507,
  	92,1,0,0,0,508,509,5,64,0,0,509,510,3,143,71,0,510,511,3,167,83,0,511,
  	512,3,179,89,0,512,513,3,165,82,0,513,514,3,177,88,0,514,515,3,147,73,
  	0,515,516,3,173,86,0,516,517,5,45,0,0,517,518,3,175,87,0,518,519,3,177,
  	88,0,519,520,3,187,93,0,520,521,3,161,80,0,521,522,3,147,73,0,522,94,
  	1,0,0,0,523,524,5,64,0,0,524,525,3,149,74,0,525,526,3,167,83,0,526,527,
  	3,165,82,0,527,528,3,177,88,0,528,529,5,45,0,0,529,530,3,149,74,0,530,
  	531,3,147,73,0,531,532,3,139,69,0,532,533,3,177,88,0,533,534,3,179,89,
  	0,534,535,3,173,86,0,535,536,3,147,73,0,536,537,5,45,0,0,537,538,3,181,
  	90,0,538,539,3,139,69,0,539,540,3,161,80,0,540,541,3,179,89,0,541,542,
  	3,147,73,0,542,543,3,175,87,0,543,96,1,0,0,0,544,545,3,181,90,0,545,546,
  	3,139,69,0,546,547,3,173,86,0,547,98,1,0,0,0,548,549,3,167,83,0,549,550,
  	3,165,82,0,550,551,3,161,80,0,551,552,3,187,93,0,552,100,1,0,0,0,553,
  	554,3,165,82,0,554,555,3,167,83,0,555,556,3,177,88,0,556,102,1,0,0,0,
  	557,558,3,139,69,0,558,559,3,165,82,0,559,560,3,145,72,0,560,104,1,0,
  	0,0,561,610,3,111,55,0,562,563,3,147,73,0,563,564,3,163,81,0,564,611,
  	1,0,0,0,565,566,3,147,73,0,566,567,3,185,92,0,567,611,1,0,0,0,568,569,
  	3,169,84,0,569,570,3,185,92,0,570,611,1,0,0,0,571,572,3,143,71,0,572,
  	573,3,163,81,0,573,611,1,0,0,0,574,575,3,163,81,0,575,576,3,163,81,0,
  	576,611,1,0,0,0,577,578,3,155,77,0,578,579,3,165,82,0,579,611,1,0,0,0,
  	580,581,3,169,84,0,581,582,3,177,88,0,582,611,1,0,0,0,583,584,3,169,84,
  	0,584,585,3,143,71,0,585,611,1,0,0,0,586,587,3,143,71,0,587,588,3,153,
  	76,0,588,611,1,0,0,0,589,590,3,173,86,0,590,591,3,147,73,0,591,592,3,
  	163,81,0,592,611,1,0,0,0,593,594,3,181,90,0,594,595,3,183,91,0,595,611,
  	1,0,0,0,596,597,3,181,90,0,597,598,3,153,76,0,598,611,1,0,0,0,599,600,
  	3,181,90,0,600,601,3,163,81,0,601,602,3,155,77,0,602,603,3,165,82,0,603,
  	611,1,0,0,0,604,605,3,181,90,0,605,606,3,163,81,0,606,607,3,139,69,0,
  	607,608,3,185,92,0,608,611,1,0,0,0,609,611,5,37,0,0,610,562,1,0,0,0,610,
  	565,1,0,0,0,610,568,1,0,0,0,610,571,1,0,0,0,610,574,1,0,0,0,610,577,1,
  	0,0,0,610,580,1,0,0,0,610,583,1,0,0,0,610,586,1,0,0,0,610,589,1,0,0,0,
  	610,593,1,0,0,0,610,596,1,0,0,0,610,599,1,0,0,0,610,604,1,0,0,0,610,609,
  	1,0,0,0,611,106,1,0,0,0,612,613,3,111,55,0,613,614,3,121,60,0,614,108,
  	1,0,0,0,615,616,3,111,55,0,616,617,5,37,0,0,617,110,1,0,0,0,618,620,7,
  	10,0,0,619,618,1,0,0,0,620,621,1,0,0,0,621,619,1,0,0,0,621,622,1,0,0,
  	0,622,629,1,0,0,0,623,625,5,46,0,0,624,626,7,10,0,0,625,624,1,0,0,0,626,
  	627,1,0,0,0,627,625,1,0,0,0,627,628,1,0,0,0,628,630,1,0,0,0,629,623,1,
  	0,0,0,629,630,1,0,0,0,630,638,1,0,0,0,631,633,5,46,0,0,632,634,7,10,0,
  	0,633,632,1,0,0,0,634,635,1,0,0,0,635,633,1,0,0,0,635,636,1,0,0,0,636,
  	638,1,0,0,0,637,619,1,0,0,0,637,631,1,0,0,0,638,112,1,0,0,0,639,640,3,
  	179,89,0,640,641,3,173,86,0,641,642,3,161,80,0,642,646,5,40,0,0,643,645,
  	3,51,25,0,644,643,1,0,0,0,645,648,1,0,0,0,646,644,1,0,0,0,646,647,1,0,
  	0,0,647,651,1,0,0,0,648,646,1,0,0,0,649,652,3,115,57,0,650,652,3,49,24,
  	0,651,649,1,0,0,0,651,650,1,0,0,0,652,656,1,0,0,0,653,655,3,51,25,0,654,
  	653,1,0,0,0,655,658,1,0,0,0,656,654,1,0,0,0,656,657,1,0,0,0,657,659,1,
  	0,0,0,658,656,1,0,0,0,659,660,5,41,0,0,660,114,1,0,0,0,661,670,5,34,0,
  	0,662,669,8,11,0,0,663,666,5,92,0,0,664,667,3,137,68,0,665,667,8,12,0,
  	0,666,664,1,0,0,0,666,665,1,0,0,0,667,669,1,0,0,0,668,662,1,0,0,0,668,
  	663,1,0,0,0,669,672,1,0,0,0,670,668,1,0,0,0,670,671,1,0,0,0,671,673,1,
  	0,0,0,672,670,1,0,0,0,673,688,5,34,0,0,674,683,5,39,0,0,675,682,8,13,
  	0,0,676,679,5,92,0,0,677,680,3,137,68,0,678,680,8,12,0,0,679,677,1,0,
  	0,0,679,678,1,0,0,0,680,682,1,0,0,0,681,675,1,0,0,0,681,676,1,0,0,0,682,
  	685,1,0,0,0,683,681,1,0,0,0,683,684,1,0,0,0,684,686,1,0,0,0,685,683,1,
  	0,0,0,686,688,5,39,0,0,687,661,1,0,0,0,687,674,1,0,0,0,688,116,1,0,0,
  	0,689,690,3,121,60,0,690,691,5,40,0,0,691,118,1,0,0,0,692,693,5,117,0,
  	0,693,694,5,43,0,0,694,752,1,0,0,0,695,699,3,37,18,0,696,698,5,63,0,0,
  	697,696,1,0,0,0,698,701,1,0,0,0,699,697,1,0,0,0,699,700,1,0,0,0,700,753,
  	1,0,0,0,701,699,1,0,0,0,702,703,3,37,18,0,703,707,3,37,18,0,704,706,5,
  	63,0,0,705,704,1,0,0,0,706,709,1,0,0,0,707,705,1,0,0,0,707,708,1,0,0,
  	0,708,753,1,0,0,0,709,707,1,0,0,0,710,711,3,37,18,0,711,712,3,37,18,0,
  	712,716,3,37,18,0,713,715,5,63,0,0,714,713,1,0,0,0,715,718,1,0,0,0,716,
  	714,1,0,0,0,716,717,1,0,0,0,717,753,1,0,0,0,718,716,1,0,0,0,719,720,3,
  	37,18,0,720,721,3,37,18,0,721,722,3,37,18,0,722,726,3,37,18,0,723,725,
  	5,63,0,0,724,723,1,0,0,0,725,728,1,0,0,0,726,724,1,0,0,0,726,727,1,0,
  	0,0,727,753,1,0,0,0,728,726,1,0,0,0,729,730,3,37,18,0,730,731,3,37,18,
  	0,731,732,3,37,18,0,732,733,3,37,18,0,733,737,3,37,18,0,734,736,5,63,
  	0,0,735,734,1,0,0,0,736,739,1,0,0,0,737,735,1,0,0,0,737,738,1,0,0,0,738,
  	753,1,0,0,0,739,737,1,0,0,0,740,741,3,37,18,0,741,742,3,37,18,0,742,743,
  	3,37,18,0,743,744,3,37,18,0,744,745,3,37,18,0,745,749,3,37,18,0,746,748,
  	5,63,0,0,747,746,1,0,0,0,748,751,1,0,0,0,749,747,1,0,0,0,749,750,1,0,
  	0,0,750,753,1,0,0,0,751,749,1,0,0,0,752,695,1,0,0,0,752,702,1,0,0,0,752,
  	710,1,0,0,0,752,719,1,0,0,0,752,729,1,0,0,0,752,740,1,0,0,0,753,769,1,
  	0,0,0,754,755,5,117,0,0,755,756,5,43,0,0,756,758,1,0,0,0,757,759,3,37,
  	18,0,758,757,1,0,0,0,759,760,1,0,0,0,760,758,1,0,0,0,760,761,1,0,0,0,
  	761,762,1,0,0,0,762,764,5,45,0,0,763,765,3,37,18,0,764,763,1,0,0,0,765,
  	766,1,0,0,0,766,764,1,0,0,0,766,767,1,0,0,0,767,769,1,0,0,0,768,692,1,
  	0,0,0,768,754,1,0,0,0,769,120,1,0,0,0,770,774,3,45,22,0,771,773,3,47,
  	23,0,772,771,1,0,0,0,773,776,1,0,0,0,774,772,1,0,0,0,774,775,1,0,0,0,
  	775,122,1,0,0,0,776,774,1,0,0,0,777,778,5,45,0,0,778,779,5,45,0,0,779,
  	781,1,0,0,0,780,782,3,47,23,0,781,780,1,0,0,0,782,783,1,0,0,0,783,781,
  	1,0,0,0,783,784,1,0,0,0,784,124,1,0,0,0,785,786,5,43,0,0,786,126,1,0,
  	0,0,787,788,5,45,0,0,788,128,1,0,0,0,789,790,5,62,0,0,790,130,1,0,0,0,
  	791,792,5,126,0,0,792,132,1,0,0,0,793,794,5,58,0,0,794,795,3,165,82,0,
  	795,796,3,167,83,0,796,797,3,177,88,0,797,798,5,40,0,0,798,134,1,0,0,
  	0,799,801,7,14,0,0,800,799,1,0,0,0,801,802,1,0,0,0,802,800,1,0,0,0,802,
  	803,1,0,0,0,803,136,1,0,0,0,804,805,5,13,0,0,805,808,5,10,0,0,806,808,
  	7,12,0,0,807,804,1,0,0,0,807,806,1,0,0,0,808,138,1,0,0,0,809,810,7,15,
  	0,0,810,140,1,0,0,0,811,812,7,16,0,0,812,142,1,0,0,0,813,814,7,17,0,0,
  	814,144,1,0,0,0,815,816,7,18,0,0,816,146,1,0,0,0,817,818,7,19,0,0,818,
  	148,1,0,0,0,819,820,7,20,0,0,820,150,1,0,0,0,821,822,7,21,0,0,822,152,
  	1,0,0,0,823,824,7,22,0,0,824,154,1,0,0,0,825,826,7,23,0,0,826,156,1,0,
  	0,0,827,828,7,24,0,0,828,158,1,0,0,0,829,830,7,25,0,0,830,160,1,0,0,0,
  	831,832,7,26,0,0,832,162,1,0,0,0,833,834,7,27,0,0,834,164,1,0,0,0,835,
  	836,7,28,0,0,836,166,1,0,0,0,837,838,7,29,0,0,838,168,1,0,0,0,839,840,
  	7,30,0,0,840,170,1,0,0,0,841,842,7,31,0,0,842,172,1,0,0,0,843,844,7,32,
  	0,0,844,174,1,0,0,0,845,846,7,33,0,0,846,176,1,0,0,0,847,848,7,34,0,0,
  	848,178,1,0,0,0,849,850,7,35,0,0,850,180,1,0,0,0,851,852,7,36,0,0,852,
  	182,1,0,0,0,853,854,7,37,0,0,854,184,1,0,0,0,855,856,7,38,0,0,856,186,
  	1,0,0,0,857,858,7,39,0,0,858,188,1,0,0,0,859,860,7,40,0,0,860,190,1,0,
  	0,0,52,0,237,240,243,246,249,254,259,264,269,274,276,281,289,295,301,
  	307,311,337,383,385,483,610,621,627,629,635,637,646,651,656,666,668,670,
  	679,681,683,687,699,707,716,726,737,749,752,760,766,768,774,783,802,807,
  	1,6,0,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  css3lexerLexerStaticData = staticData.release();
}

}

CSS3Lexer::CSS3Lexer(CharStream *input) : Lexer(input) {
  CSS3Lexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *css3lexerLexerStaticData->atn, css3lexerLexerStaticData->decisionToDFA, css3lexerLexerStaticData->sharedContextCache);
}

CSS3Lexer::~CSS3Lexer() {
  delete _interpreter;
}

std::string CSS3Lexer::getGrammarFileName() const {
  return "CSS3.g4";
}

const std::vector<std::string>& CSS3Lexer::getRuleNames() const {
  return css3lexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& CSS3Lexer::getChannelNames() const {
  return css3lexerLexerStaticData->channelNames;
}

const std::vector<std::string>& CSS3Lexer::getModeNames() const {
  return css3lexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& CSS3Lexer::getVocabulary() const {
  return css3lexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView CSS3Lexer::getSerializedATN() const {
  return css3lexerLexerStaticData->serializedATN;
}

const atn::ATN& CSS3Lexer::getATN() const {
  return *css3lexerLexerStaticData->atn;
}




void CSS3Lexer::initialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  css3lexerLexerInitialize();
#else
  ::antlr4::internal::call_once(css3lexerLexerOnceFlag, css3lexerLexerInitialize);
#endif
}
