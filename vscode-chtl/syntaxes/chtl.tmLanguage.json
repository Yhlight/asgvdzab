{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "CHTL",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#template-definition"
        },
        {
            "include": "#custom-definition"
        },
        {
            "include": "#namespace-definition"
        },
        {
            "include": "#import-statement"
        },
        {
            "include": "#constraint-statement"
        },
        {
            "include": "#element-block"
        },
        {
            "include": "#script-block"
        },
        {
            "include": "#style-block"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.chtl",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.chtl",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "template-definition": {
            "name": "meta.template.chtl",
            "begin": "(\\[Template\\])\\s+(@(?:Element|Style|Var))\\s+(\\w+)\\s*\\{",
            "beginCaptures": {
                "1": { "name": "storage.type.template.chtl" },
                "2": { "name": "keyword.other.type.chtl" },
                "3": { "name": "entity.name.type.template.chtl" }
            },
            "end": "\\}",
            "patterns": [
                { "include": "#template-content" }
            ]
        },
        "custom-definition": {
            "name": "meta.custom.chtl",
            "begin": "(\\[Custom\\])\\s+(@(?:Element|Style|Var))\\s+(\\w+)\\s*\\{",
            "beginCaptures": {
                "1": { "name": "storage.type.custom.chtl" },
                "2": { "name": "keyword.other.type.chtl" },
                "3": { "name": "entity.name.type.custom.chtl" }
            },
            "end": "\\}",
            "patterns": [
                { "include": "#template-content" }
            ]
        },
        "namespace-definition": {
            "name": "meta.namespace.chtl",
            "begin": "(\\[Namespace\\])\\s+(\\w+)\\s*\\{",
            "beginCaptures": {
                "1": { "name": "storage.type.namespace.chtl" },
                "2": { "name": "entity.name.namespace.chtl" }
            },
            "end": "\\}",
            "patterns": [
                { "include": "$self" }
            ]
        },
        "import-statement": {
            "patterns": [
                {
                    "name": "meta.import.chtl",
                    "match": "(\\[Import\\])\\s+(@\\w+)\\s+(from)\\s+(\"[^\"]*\"|'[^']*')(?:\\s+(as)\\s+(\\w+))?\\s*;",
                    "captures": {
                        "1": { "name": "keyword.control.import.chtl" },
                        "2": { "name": "keyword.other.type.chtl" },
                        "3": { "name": "keyword.control.from.chtl" },
                        "4": { "name": "string.quoted.chtl" },
                        "5": { "name": "keyword.control.as.chtl" },
                        "6": { "name": "variable.other.alias.chtl" }
                    }
                },
                {
                    "name": "meta.import.official.chtl",
                    "match": "(\\[Import\\])\\s+(@\\w+)\\s+(from)\\s+(chtl::)(\\w+)(?:\\s+(as)\\s+(\\w+))?\\s*;",
                    "captures": {
                        "1": { "name": "keyword.control.import.chtl" },
                        "2": { "name": "keyword.other.type.chtl" },
                        "3": { "name": "keyword.control.from.chtl" },
                        "4": { "name": "support.type.official.chtl" },
                        "5": { "name": "variable.other.module.chtl" },
                        "6": { "name": "keyword.control.as.chtl" },
                        "7": { "name": "variable.other.alias.chtl" }
                    }
                }
            ]
        },
        "constraint-statement": {
            "name": "meta.constraint.chtl",
            "match": "(except)\\s+(?:(\\[\\w+\\])|(@\\w+)\\s+(\\w+))\\s*;",
            "captures": {
                "1": { "name": "keyword.control.except.chtl" },
                "2": { "name": "storage.type.chtl" },
                "3": { "name": "keyword.other.type.chtl" },
                "4": { "name": "entity.name.tag.chtl" }
            }
        },
        "element-block": {
            "name": "meta.element.chtl",
            "begin": "(\\w+)\\s*\\{",
            "beginCaptures": {
                "1": { "name": "entity.name.tag.chtl" }
            },
            "end": "\\}",
            "patterns": [
                { "include": "#element-content" }
            ]
        },
        "element-content": {
            "patterns": [
                { "include": "#comments" },
                { "include": "#attribute" },
                { "include": "#text-block" },
                { "include": "#style-block" },
                { "include": "#script-block" },
                { "include": "#template-usage" },
                { "include": "#element-block" }
            ]
        },
        "attribute": {
            "patterns": [
                {
                    "name": "meta.attribute.colon.chtl",
                    "match": "(\\w[\\w-]*)\\s*:\\s*(\"[^\"]*\"|'[^']*'|[^;\\s]+)\\s*;",
                    "captures": {
                        "1": { "name": "entity.other.attribute-name.chtl" },
                        "2": { "name": "string.quoted.chtl" }
                    }
                },
                {
                    "name": "meta.attribute.equals.chtl",
                    "match": "(\\w[\\w-]*)\\s*=\\s*(\"[^\"]*\"|'[^']*'|[^;\\s]+)\\s*;",
                    "captures": {
                        "1": { "name": "entity.other.attribute-name.chtl" },
                        "2": { "name": "string.quoted.chtl" }
                    }
                }
            ]
        },
        "text-block": {
            "name": "meta.text.chtl",
            "begin": "(text)\\s*\\{",
            "beginCaptures": {
                "1": { "name": "keyword.other.text.chtl" }
            },
            "end": "\\}",
            "patterns": [
                { "include": "#text-content" }
            ]
        },
        "text-content": {
            "patterns": [
                {
                    "name": "string.quoted.double.chtl",
                    "begin": "\"",
                    "end": "\""
                },
                {
                    "name": "string.quoted.single.chtl",
                    "begin": "'",
                    "end": "'"
                },
                {
                    "name": "string.unquoted.chtl",
                    "match": "[^{}\"']+"
                }
            ]
        },
        "style-block": {
            "name": "meta.style.chtl",
            "begin": "(style)\\s*\\{",
            "beginCaptures": {
                "1": { "name": "keyword.other.style.chtl" }
            },
            "end": "\\}",
            "patterns": [
                { "include": "#style-content" }
            ]
        },
        "style-content": {
            "patterns": [
                { "include": "#comments" },
                { "include": "#template-usage" },
                { "include": "#css-property" },
                { "include": "#css-selector" },
                { "include": "#inherit-statement" }
            ]
        },
        "css-property": {
            "name": "meta.property.css.chtl",
            "match": "([\\w-]+)\\s*:\\s*([^;]+);",
            "captures": {
                "1": { "name": "support.type.property-name.css" },
                "2": { "name": "support.constant.property-value.css" }
            }
        },
        "css-selector": {
            "name": "meta.selector.css.chtl",
            "begin": "([.#&][\\w-:()]+|@media[^{]+)\\s*\\{",
            "beginCaptures": {
                "1": { "name": "entity.other.attribute-name.css" }
            },
            "end": "\\}",
            "patterns": [
                { "include": "#style-content" }
            ]
        },
        "inherit-statement": {
            "name": "meta.inherit.chtl",
            "match": "(inherit)\\s+(\\w+)\\s*;",
            "captures": {
                "1": { "name": "keyword.other.inherit.chtl" },
                "2": { "name": "entity.name.type.chtl" }
            }
        },
        "script-block": {
            "name": "meta.script.chtl",
            "begin": "(script)\\s*\\{",
            "beginCaptures": {
                "1": { "name": "keyword.other.script.chtl" }
            },
            "end": "\\}",
            "patterns": [
                { "include": "#chtl-js" }
            ]
        },
        "chtl-js": {
            "patterns": [
                { "include": "#chtl-js-selector" },
                { "include": "#chtl-js-method" },
                { "include": "#javascript" }
            ]
        },
        "chtl-js-selector": {
            "name": "meta.selector.chtljs",
            "match": "\\{\\{([#.]?\\w+)\\}\\}",
            "captures": {
                "1": { "name": "variable.other.selector.chtljs" }
            }
        },
        "chtl-js-method": {
            "patterns": [
                {
                    "name": "meta.method.listen.chtljs",
                    "match": "(->)(listen)\\s*\\(",
                    "captures": {
                        "1": { "name": "keyword.operator.arrow.chtljs" },
                        "2": { "name": "support.function.chtljs" }
                    }
                },
                {
                    "name": "meta.method.delegate.chtljs",
                    "match": "(->)(delegate)\\s*\\(",
                    "captures": {
                        "1": { "name": "keyword.operator.arrow.chtljs" },
                        "2": { "name": "support.function.chtljs" }
                    }
                },
                {
                    "name": "meta.method.animate.chtljs",
                    "match": "(->)(animate)\\s*\\(",
                    "captures": {
                        "1": { "name": "keyword.operator.arrow.chtljs" },
                        "2": { "name": "support.function.chtljs" }
                    }
                }
            ]
        },
        "template-usage": {
            "patterns": [
                {
                    "name": "meta.template.usage.chtl",
                    "match": "(@(?:Element|Style|Var))\\s+(\\w+)(?:\\.(\\w+))?(?:\\s+(from)\\s+(\\w+))?\\s*;",
                    "captures": {
                        "1": { "name": "keyword.other.type.chtl" },
                        "2": { "name": "entity.name.type.chtl" },
                        "3": { "name": "variable.other.property.chtl" },
                        "4": { "name": "keyword.control.from.chtl" },
                        "5": { "name": "entity.name.namespace.chtl" }
                    }
                },
                {
                    "name": "meta.template.usage.block.chtl",
                    "begin": "(@(?:Element|Style|Var))\\s+(\\w+)\\s*\\{",
                    "beginCaptures": {
                        "1": { "name": "keyword.other.type.chtl" },
                        "2": { "name": "entity.name.type.chtl" }
                    },
                    "end": "\\}",
                    "patterns": [
                        { "include": "#style-content" }
                    ]
                }
            ]
        },
        "template-content": {
            "patterns": [
                { "include": "#comments" },
                { "include": "#element-content" },
                { "include": "#style-content" },
                { "include": "#var-content" }
            ]
        },
        "var-content": {
            "patterns": [
                {
                    "name": "meta.variable.chtl",
                    "match": "(\\w+)\\s*:\\s*(\"[^\"]*\"|'[^']*'|[^;]+)\\s*;",
                    "captures": {
                        "1": { "name": "variable.other.chtl" },
                        "2": { "name": "string.quoted.chtl" }
                    }
                }
            ]
        },
        "javascript": {
            "patterns": [
                { "include": "source.js" }
            ]
        }
    },
    "scopeName": "source.chtl"
}